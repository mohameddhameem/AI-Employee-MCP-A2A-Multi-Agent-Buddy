# RAG-A2A-MCP Project .gitignore
# Comprehensive gitignore for Python, Docker, and AI/ML projects

# ================================
# Python
# ================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ================================
# Docker & Containers
# ================================

# Docker
.dockerignore
Dockerfile.local
docker-compose.override.yml
docker-compose.local.yml

# Container logs
logs/
*.log

# Docker volumes and data
docker-data/
volumes/

# ================================
# Environment & Configuration
# ================================

# Environment files
.env
.env.*
!.env.example
.envrc

# Local configuration
config/local.yml
config/local.yaml
config/development.yml
config/production.yml
local_config.py

# SSL certificates and keys
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx
deployment/ssl/*.key
deployment/ssl/*.crt
deployment/ssl/*.pem

# Secrets and API keys
secrets/
.secrets
api_keys.txt
tokens.txt

# ================================
# Database & Data
# ================================

# SQLite databases (keep sample data)
*.db
*.sqlite
*.sqlite3
!data/employees.db

# Database backups
backup/
*.backup
*.bak
*.dump

# Data files
*.csv
*.json
*.parquet
*.pickle
*.pkl
!data/sample_*.csv
!data/sample_*.json

# ================================
# Logs & Monitoring
# ================================

# Application logs
logs/
*.log
*.out
*.err

# Monitoring data
prometheus_data/
grafana_data/
monitoring/

# ================================
# AI/ML Specific
# ================================

# Model files
models/
*.model
*.pkl
*.h5
*.ckpt
*.pt
*.pth
*.onnx

# Embeddings and vectors
embeddings/
vectors/
*.vec
*.bin

# Training data
training_data/
datasets/
data/raw/
data/processed/
!data/sample_*

# Weights & Biases
wandb/

# MLflow
mlruns/
mlartifacts/

# Tensorboard logs
runs/
tensorboard_logs/

# Hugging Face cache
.cache/
transformers_cache/

# ================================
# IDEs & Editors
# ================================

# VSCode
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# PyCharm
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ================================
# OS Generated
# ================================

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ================================
# Testing & Coverage
# ================================

# Test artifacts
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
coverage.xml
*.cover
.hypothesis/

# Load testing
locustfile.py
load_test_results/

# ================================
# Deployment & Infrastructure
# ================================

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
terraform.tfvars
*.tfplan

# Kubernetes
*.kubeconfig
kube-config

# Helm
charts/*.tgz

# Infrastructure logs
infrastructure_logs/

# ================================
# Project Specific
# ================================

# Agent runtime data
agent_logs/
agent_state/
agent_memory/

# MCP server data
mcp_logs/
mcp_cache/

# A2A protocol data
a2a_logs/
protocol_logs/

# Coordination system
coordination_logs/
workflow_logs/
orchestrator_state/

# Performance data
performance_logs/
benchmark_results/
profiling_data/

# Development artifacts
dev_notes.txt
todo.txt
scratch.py
test_script.py
debug.py

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Package files
*.zip
*.tar.gz
*.rar
*.7z

# Backup files
*.bak
*.backup
*.old

# ================================
# Documentation Build
# ================================

# Sphinx
docs/_build/
docs/build/

# MkDocs
site/

# GitBook
_book/

# ================================
# Node.js (if using for frontend)
# ================================

node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
yarn.lock

# ================================
# Build artifacts
# ================================

build/
dist/
*.egg-info/
.build/
.dist/

# Compiled binaries
*.exe
*.dll
*.so
*.dylib

# ================================
# Custom Project Ignores
# ================================

# Add any project-specific files/folders here
# Example:
# custom_config/
# private_data/
